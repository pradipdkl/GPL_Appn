<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GPL_Appn</name>
    </assembly>
    <members>
        <member name="T:GPL_Appn.Circle">
            <summary>
            circle class
            </summary>
            <Inheritance cref="T:GPL_Appn.IShape"/>
        </member>
        <member name="M:GPL_Appn.Circle.GetValue(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            shape parameter
            </summary>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="hypotenus">the hypotenus</param>
            <param name="radius">the radius</param>
        </member>
        <member name="M:GPL_Appn.Circle.Draw(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            to draw circle 
            </summary>
            <param name="G"></param>
            <summary>
            parameter to draw circle
            </summary>
            <summary>
            circle parameterized constructor
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="T:GPL_Appn.Command">
            <summary>
            Command class
            </summary>
        </member>
        <member name="F:GPL_Appn.Command.width">
            <summary>
            Global variable.
            </summary>
        </member>
        <member name="F:GPL_Appn.Command.radius">
            <summary>
            Global variable.
            </summary>
        </member>
        <member name="F:GPL_Appn.Command.height">
            <summary>
            Global variable.
            </summary>
        </member>
        <member name="F:GPL_Appn.Command.hypotenus">
            <summary>
            Global variable.
            </summary>
        </member>
        <member name="F:GPL_Appn.Command.counter">
            <summary>
            Global variable.
            </summary>
        </member>
        <member name="F:GPL_Appn.Command.loopnumber">
            <summary>
            Global variable.
            </summary>
        </member>
        <member name="F:GPL_Appn.Command.dsize">
            <summary>
            Global variable.
            </summary>
        </member>
        <member name="M:GPL_Appn.Command.loadCommand(System.Windows.Forms.TextBox,System.Drawing.Graphics,System.Windows.Forms.PictureBox)">
            <summary>
            
            </summary>
            <param name="textBoxCmd"></param>
            <param name="graph"></param>
            <param name="panelDraw"></param>
        </member>
        <member name="M:GPL_Appn.Command.RunCommand(System.String)">
            <summary>
            function for running loop statement commands.
            </summary>
            <param name="singleLineCommand"></param>
        </member>
        <member name="M:GPL_Appn.Command.GetSize(System.String)">
            <summary>
            Get the size for loop functions. 
            </summary>
            <param name="lineCommand"></param>
            <returns></returns>
        </member>
        <member name="M:GPL_Appn.Command.Shapecommand(System.String)">
            <summary>
            Commandline
            </summary>
            <param name="textcmd"></param>
        </member>
        <member name="T:GPL_Appn.GPL_Appn">
            <summary>
            Main Class
            </summary>
        </member>
        <member name="M:GPL_Appn.GPL_Appn.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:GPL_Appn.GPL_Appn.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GPL_Appn.GPL_Appn.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GPL_Appn.GPL_Appn.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GPL_Appn.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="T:GPL_Appn.Rectangle">
            <summary>
            Recatngle 
            </summary>
        </member>
        <member name="F:GPL_Appn.Rectangle.widt">
            <summary>The width</summary>
        </member>
        <member name="F:GPL_Appn.Rectangle.high">
            <summary>The height</summary>
        </member>
        <member name="M:GPL_Appn.Rectangle.GetValue(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            parameter for rectangle
            </summary>
            <summary>Sets the shape parameter.</summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="hypotenus"></param>
            <param name="radius">The Radius.</param>
        </member>
        <member name="M:GPL_Appn.Rectangle.Draw(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            draw rectangle
            </summary>
            <param name="G"></param>
            <param name="x">An integer.</param>
            <param name="y">An integer.</param>
        </member>
        <member name="T:GPL_Appn.IShape">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="M:GPL_Appn.IShape.Draw(System.Drawing.Graphics,System.Int32,System.Int32)">
            <param name="x"></param>
            <param name="y"></param>
            <summary>
            draw method
            </summary>
            <param name="G">Graphics</param>
        </member>
        <member name="M:GPL_Appn.IShape.GetValue(System.Single,System.Single,System.Single,System.Single)">
            <summary>Sets the shape parameter.</summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="hypotenus">The hypotenus</param>
            <param name="radius">The Radius.</param>
        </member>
        <member name="T:GPL_Appn.ShapeFactory">
            <summary>
            Factory class to get required shape
            </summary>
        </member>
        <member name="M:GPL_Appn.ShapeFactory.GetShape(System.String)">
            <summary>
            Method to get required shape
            </summary>
            <param name="ShapeTypes"></param>
            <returns></returns>
        </member>
        <member name="T:GPL_Appn.Triangle">
            <summary>
            Triangle 
            </summary>
            <inheritdoc cref="T:GPL_Appn.IShape"/>
        </member>
        <member name="M:GPL_Appn.Triangle.GetValue(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="hypotenus"></param>
            <param name="radius"></param>
        </member>
        <member name="M:GPL_Appn.Triangle.chkTriangleValidity">
            <summary>
            Check triangle exist or not.
            </summary>
            <returns>result true or false.</returns>
        </member>
        <member name="M:GPL_Appn.Triangle.Draw(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="G"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="T:GPL_Appn.Validation">
            <summary>
            Simple validation class
            </summary>
        </member>
        <member name="P:GPL_Appn.Validation.IsCmdValid">
            <summary>Gets or sets a value indicating whether this instance is command valid.</summary>
            <value>
            <c>true</c> if this instance is command valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GPL_Appn.Validation.IsSyntaxValid">
            <summary>Gets or sets a value indicating whether this instance is Syntax valid.</summary>
            <value>
            <c>true</c> if this instance is syntax valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GPL_Appn.Validation.IsParameterValid">
            <summary>Gets or sets a value indicating whether this instance is parameter valid.</summary>
            <value>
            <c>true</c> if this instance is parameter valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GPL_Appn.Validation.IsSomethingInvalid">
            <summary>Gets or sets a value indicating whether this instance is command invalid.</summary>
            <value>
            <c>true</c> if this instance is command invalid; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:GPL_Appn.Validation.LineNumber">
            <summary>
            lineNumber: indicates line number of the command in the multi-textline control.
            </summary>
        </member>
        <member name="F:GPL_Appn.Validation.doesCmdHasLoop">
            <summary>
            doesCmdHasLoop: indicates whether command has "LOOP" keyword in the multi-textline control.
            </summary>
        </member>
        <member name="F:GPL_Appn.Validation.doesCmdHasEndLoop">
            <summary>
            doesCmdHasEndLoop: indicates whether command has "ENDLOOP" keyword in the multi-textline control.
            </summary>
        </member>
        <member name="F:GPL_Appn.Validation.doesCmdHasIf">
            <summary>
            doesCmdHasIf: indicates whether command has "IF" keyword in the multi-textline control.
            </summary>
        </member>
        <member name="F:GPL_Appn.Validation.doesCmdHasEndif">
            <summary>
            doesCmdHasEndif: indicates whether command has "ENDIF" keyword in the multi-textline control.
            </summary>
        </member>
        <member name="F:GPL_Appn.Validation.endIfLineNo">
            <summary>
            doesCmdHasEndif: indicates whether command has "ENDIF" keyword in the multi-textline control.
            </summary>
        </member>
        <member name="P:GPL_Appn.Validation.lineNumber">
            <summary>Gets or sets the line number.</summary>
            <value>The line number.</value>
        </member>
        <member name="P:GPL_Appn.Validation.DoesCmdHasLoop">
            <summary>Gets or sets a value indicating whether [does command has loop].</summary>
            <value>
              <c>true</c> if [does command has loop]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GPL_Appn.Validation.DoesCmdHasEndLoop">
            <summary>Gets or sets a value indicating whether [does command has end loop].</summary>
            <value>
              <c>true</c> if [does command has end loop]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GPL_Appn.Validation.DoesCmdHasIf">
            <summary>Gets or sets a value indicating whether [does command has if].</summary>
            <value>
              <c>true</c> if [does command has if]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GPL_Appn.Validation.DoesCmdHasEndif">
            <summary>Gets or sets a value indicating whether [does command has endif].</summary>
            <value>
              <c>true</c> if [does command has endif]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GPL_Appn.Validation.LoopLineNo">
            <summary>Gets or sets the loop line no.</summary>
            <value>The loop line no.</value>
        </member>
        <member name="P:GPL_Appn.Validation.EndLoopLineNo">
            <summary>Gets or sets the end loop line no.</summary>
            <value>The end loop line no.</value>
        </member>
        <member name="P:GPL_Appn.Validation.IfLineNo">
            <summary>Gets or sets if line no.</summary>
            <value>If line no.</value>
        </member>
        <member name="P:GPL_Appn.Validation.EndIfLineNo">
            <summary>Gets or sets the end if line no.</summary>
            <value>The end if line no.</value>
        </member>
        <member name="M:GPL_Appn.Validation.#ctor(System.Windows.Forms.TextBox)">
            <summary>
            Check the command validations.
            </summary>
            <param name="textBoxCmd"></param>
        </member>
        <member name="M:GPL_Appn.Validation.CheckCmdLineValidation(System.String)">
            <summary>
            Check commands for any error such as syntax, parameter or validity.
            </summary>
            <param name="cmd">String</param>
        </member>
        <member name="M:GPL_Appn.Validation.CheckCmdLoopAndIfValidation">
            <summary>
            Check the loop and if command validation.
            </summary>
        </member>
        <member name="M:GPL_Appn.Validation.checkIfVariableDefined(System.String)">
            <summary>
            check the variable whether defined or not.
            </summary>
            <param name="variable"></param>
        </member>
        <member name="T:GPL_Appn.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:GPL_Appn.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GPL_Appn.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
